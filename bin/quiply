#!/usr/bin/env ruby

#              _       _
#   __ _ _   _(_)_ __ | |_   _
#  / _` | | | | | '_ \| | | | |
# | (_| | |_| | | |_) | | |_| |
#  \__, |\__,_|_| .__/|_|\__, |
#   by|_|stephan|_|dotcom|___/

# quiply - cohorts challenge

require 'methadone'
require 'quiply'

include Methadone::Main
include Methadone::CLILogging
include Quiply

main do |users_csv, orders_csv|
  Groupdate.week_start = options[:start_day].to_sym
  maxweeks = options[:weeks].to_i
  Import.new(User).import(users_csv)
  Import.new(Order).import(orders_csv)

  rows = User.tabulate_new_by_join_week(maxweeks)

  headings = %w[Cohort Users]
  max_cols = [rows.map(&:length).max, maxweeks + 2].min
  headings += (0...(max_cols - 2)).map { |w| "#{w * 7}-#{(w + 1) * 7} days" }

  # pad out rows
  rows = rows.map { |r| (r + [nil] * max_cols).first(max_cols) }

  io = options[:output] ? File.open(options[:output], 'w') : $stdout
  case options[:format]
  when 'txt'
    table = Terminal::Table.new rows: rows.reverse,
                                headings: headings, # %w[Cohort Users 0-7 7-14 14-21 ...],
                                title: 'Cohort Challenge',
                                style: { all_separators: true }
    table.align_column(1, :right)
    io.puts table
  when 'csv'
    CSV(io) do |csv|
      csv << headings
      rows.reverse_each { |r| csv << r }
    end
  when 'html'
    io.write '<table>'
    io.write '<thead><tr>'
    io.write(headings.map { |h| "<th>#{h}</th>" }.join)
    io.write '</tr></thead>'
    io.write '<tbody>'
    rows.reverse_each do |row|
      io.write '<tr>'
      io.write(row.map { |c| c.nil? ? '<td></td>' : "<td>#{c.split("\n").join('</br>')}</td>" }.join)
      io.write '</tr>'
    end
    io.write '</tbody>'
    io.write '</table>'
  end
end

options[:weeks] = '8'
options[:format] = 'txt'
options[:start_day] = 'sun'

description <<~EODESC
  given input CSV files of orders and users, group users into cohorts joined by week,
  further subdivided into groups who placed a order in a given week after joining
EODESC

on('-w VALUE', '--weeks', 'override total weeks back of cohorts, default: 8')
formats = %w[txt html csv]
on('-f VALUE', '--format', formats, 'output format, default: txt', "(#{formats.join('|')})")
days = %w[sun mon tue wed thu fri sat]
on('-s VALUE', '--start_day', days, 'day to start week, default: sun', "(#{days.join('|')})")
on('-o VALUE', '--output', 'output filename, default: stdout')

arg :users_csv, :required, 'input filename for users csv.'
arg :orders_csv, :required, 'input filename for orders csv.'

version Quiply::VERSION, compact: true

go!
